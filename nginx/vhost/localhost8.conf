server {
    listen       80;
    listen  [::]:80;

    # Enable QUIC, HTTP/3 and HTTP/2 on both IPv4 and IPv6.
    #listen       443 ssl http2;
    #listen  [::]:443 ssl http2;

    server_name  localhost8 *.localhost8;

    #基本路徑
    set $root "/var/www/html/php8";

    #將domain第一段視作資料夾（ex:專案名稱.XXX）
    if ($host ~ ^(\w+)\.localhost8$) {
        set $root "/var/www/html/php8/$1";
    }

    #什麼都沒有時指到目錄下localhost
    if ($host = "localhost8") {

         set $root "/var/www/html/php8";
    }

    #檢查目錄下是否有upload資料夾，若有則將 root指向upload內
    if ( -d "$root/upload") {
        set $root $root/upload;
    }

    #檢查目錄下是否有public資料夾，若有則將 root指向public內
    if ( -d "$root/public") {
    set $root $root/public;
    }

    #檢查目錄下是否有app資料夾，若有則將 root指向app內
    if ( -d "$root/app") {
        set $root $root/app;
    }

    #設定root 目錄
    root $root;

    client_max_body_size 2048M;
    index  index.html index.htm index.php;

    #ssl_certificate     /etc/nginx/ssl/local.crt;
    #ssl_certificate_key /etc/nginx/ssl/local.key;


    # Add HSTS header
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # Add Alt-Svc header to negotiate HTTP/3.
    add_header alt-svc 'h3-23=":443"; ma=86400';
    
    # Enable specific TLS versions (TLSv1 and TLSv1.1 are not longer saft, TLSv1.3 is required for QUIC).
    #ssl_protocols TLSv1.2 TLSv1.3;
    #ssl_ciphers TLS-CHACHA20-POLY1305-SHA28:TLS-AES-28-GCM-SHA384:TLS-AES-128-GCM-SHA28:ECDHE-ECDSA-AES28-GCM-SHA384:ECDHE-RSA-AES28-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA28:ECDHE-RSA-AES128-GCM-SHA28:ECDHE-ECDSA-AES28-SHA384:ECDHE-RSA-AES28-SHA384:ECDHE-ECDSA-AES128-SHA28:ECDHE-RSA-AES128-SHA28;
    #ssl_prefer_server_ciphers on;
    #ssl_early_data on;

    #rewrite規則start

    rewrite "^/(\w{2}\-\w{2})?\/?sitemap.xml$" /index.php?route=feed/google_sitemap&_language_=$1 last;
	rewrite ^/googlebase.xml$ /index.php?route=feed/google_base last;
	rewrite ^/system/download/(.*) /index.php?route=error/not_found last;

	if (!-f $request_filename){
		set $rule_3 1$rule_3;
	}
	if (!-d $request_filename){
		set $rule_3 2$rule_3;
	}
	if ($uri !~ ".*\.(ico|gif|jpg|jpeg|png|js|css)"){
		set $rule_3 3$rule_3;
	}
	if ($rule_3 = "321"){
		rewrite "^/(\w{2}\-\w{2})?\/?([^?]*)" /index.php?_route_=$2&_language_=$1 last;
	}

    #rewrite規則end


    location / {
    #    autoindex on;
        try_files $uri $uri/ $project/index.php?$args;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    location ~ \.php$ {
        try_files $uri /index.php =404;
        fastcgi_pass   php8:9000;  #php 對應版本
        fastcgi_index  index.php;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        include        fastcgi_params;
        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
        
        set $path_info $request_uri;

        fastcgi_param PATH_INFO $path_info;
        
    }

}

